
import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;

public class Main
{

	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		ArrayList<Person> friends = new ArrayList<Person>();
		int maxHeight = -1;
		
		for(int i = 0; i < n; i++)
		{
			int width = sc.nextInt();
			int height = sc.nextInt();
			friends.add(new Person(width, height));
			if(height > maxHeight)
				maxHeight = height;
		}
		sc.close();
		
		//We sort out list of people by how much they can decrease the width by lying down.
		//Then we loop over all of the possible heights. We choose people to lie down who can
		//improve the width without exceeding the maximum height or the limit of n/2 people
		//lying down.
		
		Collections.sort(friends);
		int bestArea;
		for(int currHeight = 1; currHeight <= maxHeight; currHeight++)
		{
			int totalWidth = 0;
			int flipped = 0;
			boolean valid = true;
			for(int i = 0; i < friends.size(); i++)
			{
				Person next = friends.get(i);
				if(next.height > currHeight)
				{
					if(next.width > currHeight)
					{
						
					}
				}
			}
		}
	}

	static class Person implements Comparable<Person>
	{
		int width;
		int height;
		
		public Person(int w, int h)
		{
			width = w;
			height = h;
		}
		
		public int compareTo(Person other)
		{
			return ((Integer) (width - height)).compareTo((Integer) (other.width - other.height));
		}
	}
}
